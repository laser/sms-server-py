// ERROR CODES
// 
// Code    Description
// 1000    Login Required (User is not logged in, but function requires a logged in user)
// 1001    Permission Denied (User is logged in, but lacks permission to perform op. Usually b/c they don't own the entity being loaded/modified)
// 1002    Invalid Params (General input validation errors, like string can't be blank, email not valid, etc)
// 1003    Not Found (Semantic way to express that we couldn't find the data requested)
// 1004    Illegal Operation (UI should not have called this function with the given params)

struct LoginInfo {
    access_token                string
    expiry_time                 int 
}

struct Project {
    project_id                  int
    name                        string
}

struct UserProject extends Project {
    access_type                 AccessType
}

struct User {
    email                       string [optional]
    name                        string
    date_created                int
    user_id                     string
    default_language            Language [optional]
    default_gps_format          GPSFormat [optional]
    default_measurement_system  MeasurementSystem [optional]
    default_google_map_type     GoogleMapType [optional]
    needs_to_update_settings    bool [optional]
}

struct Position {
    position_id                 int
    project_id                  int
    position_properties         []PositionProperty
}

struct CreatePosition {
    position_properties         []CreatePositionProperty
}

struct CreatePositionProperty {
    name                        string
    value                       string
}

struct PositionProperty {
    property_id                 int
    field_type                  FieldType
    name                        string
    value                       string
    visible                     YesNo
}

struct PositionField {
    position_field_id           int
    field_type                  FieldType
    name                        string
    visible                     YesNo
}

struct ProjectAccess {
    project_access_id           int
    project_id                  int
    access_type                 AccessType
    user_id                     string [optional]
    email                       string [optional]
    link                        string [optional]
}

enum YesNo {
    Y
    N
}

enum FieldType {
    NUMBER
    STRING
    IMAGE
    IMAGE_LIST
}

enum AccessType {
    OWNER
    COLLABORATOR
    READONLY
    PUBLIC
}

enum Language {
    EN_US
    ES_LA
    FR_FR
}

enum GPSFormat {
    DECIMAL
    DEGREE
    UTMWGS84
}

enum MeasurementSystem {
    METRIC
    IMPERIAL
}

enum GoogleMapType {
    ROADMAP
    SATELLITE
    HYBRID
    TERRAIN
}

interface AuthService {
    login(userId string, email string, name string) LoginInfo
}

interface ProjectService { 
    // add_position adds a position and its properties to a project.
    // CreatePositionProperty names must correspond to PositionField already
    // existing for this project
    // 
    // * 1004 - name specified in CreatePositionProperty does not correspond
    //          to the name of a PositionField in this Project
    // 
    // * 1004 - missing one or more core fields from CreatePositionProperty
    //          array
    // 
    // * 1002 - missing values for one or more core fields 
    // 
    add_position(accessTokenId string, projectId int, properties []CreatePositionProperty) Position

    add_position_field(accessTokenId string, projectId int, fieldType FieldType, name string) PositionField

    add_positions(accessTokenId string, projectId int, positions []CreatePosition) []Position

    add_project(accessTokenId string, projectName string) Project

    // add_project_access gives a user (by email) access to a project or can
    // be used to grant PUBLIC access. Accepts an array of emails, which can
    // be blank if PUBLIC access is being granted. Always returns true.
    //
    // Error Codes:
    //
    // * 1002 - Must specify at least one email address if accessType is not
    //          PUBLIC
    // * 1004 - Cannot add OWNER access for project
    //
    add_project_access(accessTokenId string, projectId int, accessType AccessType, language Language, measurementSys MeasurementSystem, gpsFormat GPSFormat, mapType GoogleMapType, message string, emails []string) []ProjectAccess

    delete_position(accessTokenId string, positionId int) bool

    delete_position_field(accessTokenId string, positionFieldId int) bool

    delete_project(accessTokenId string, projectId int) bool

    // delete_project_access removes a project_access row from the system. This
    // If could be tied to a user, an email, or could be a PUBLIC access. If no
    // exists no entry exists for given id, the function no-ops. Always returns
    // Always returns true.
    //
    // Error Codes:
    //
    // * 1004 - Cannot revoke OWNER access from project
    //
    delete_project_access(accessTokenId string, projectAccessId int) bool

    get_position_fields(accessTokenId string, projectId int, suppressCoreFields bool, suppressFieldTypes []FieldType) []PositionField

    get_project_access(accessTokenId string, projectId int) []ProjectAccess

    get_projects(accessTokenId string) []UserProject

    get_user_settings(accessTokenId string) User

    search_positions(accessTokenId string, projectId int, keyword string) []Position

    update_position(accessTokenId string, positionId int, properties []CreatePositionProperty) Position

    update_position_fields(accessTokenId string, fields []PositionField) bool

    update_user_settings(accessTokenId string, defaultLanguage Language, defaultGpsFormat GPSFormat, defaultMeasurementSystem MeasurementSystem, defaultGoogleMapType GoogleMapType) bool
}
